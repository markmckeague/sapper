{"version":3,"file":"chunk-18387c7f.js","sources":["../src/api/export.ts"],"sourcesContent":["import * as child_process from 'child_process';\nimport * as path from 'path';\nimport * as sander from 'sander';\nimport cheerio from 'cheerio';\nimport URL from 'url-parse';\nimport fetch from 'node-fetch';\nimport * as ports from 'port-authority';\nimport { EventEmitter } from 'events';\nimport { minify_html } from './utils/minify_html';\nimport { locations } from '../config';\nimport * as events from './interfaces';\n\nexport function exporter(opts: {}) {\n\tconst emitter = new EventEmitter();\n\n\texecute(emitter, opts).then(\n\t\t() => {\n\t\t\temitter.emit('done', <events.DoneEvent>{}); // TODO do we need to pass back any info?\n\t\t},\n\t\terror => {\n\t\t\temitter.emit('error', <events.ErrorEvent>{\n\t\t\t\terror\n\t\t\t});\n\t\t}\n\t);\n\n\treturn emitter;\n}\n\nasync function execute(emitter: EventEmitter, {\n\tbuild = 'build',\n\tdest = 'export',\n\tbasepath = ''\n} = {}) {\n\tconst export_dir = path.join(dest, basepath);\n\n\t// Prep output directory\n\tsander.rimrafSync(export_dir);\n\n\tsander.copydirSync('assets').to(export_dir);\n\tsander.copydirSync(build, 'client').to(export_dir, 'client');\n\n\tif (sander.existsSync(build, 'service-worker.js')) {\n\t\tsander.copyFileSync(build, 'service-worker.js').to(export_dir, 'service-worker.js');\n\t}\n\n\tif (sander.existsSync(build, 'service-worker.js.map')) {\n\t\tsander.copyFileSync(build, 'service-worker.js.map').to(export_dir, 'service-worker.js.map');\n\t}\n\n\tconst port = await ports.find(3000);\n\n\tconst origin = `http://localhost:${port}`;\n\n\tconst proc = child_process.fork(path.resolve(`${build}/server.js`), [], {\n\t\tcwd: process.cwd(),\n\t\tenv: Object.assign({\n\t\t\tPORT: port,\n\t\t\tNODE_ENV: 'production',\n\t\t\tSAPPER_DEST: build,\n\t\t\tSAPPER_EXPORT: 'true'\n\t\t}, process.env)\n\t});\n\n\tconst seen = new Set();\n\tconst saved = new Set();\n\n\tproc.on('message', message => {\n\t\tif (!message.__sapper__ || message.event !== 'file') return;\n\n\t\tlet file = new URL(message.url, origin).pathname.slice(1);\n\t\tlet { body } = message;\n\n\t\tif (saved.has(file)) return;\n\t\tsaved.add(file);\n\n\t\tconst is_html = message.type === 'text/html';\n\n\t\tif (is_html) {\n\t\t\tfile = file === '' ? 'index.html' : `${file}/index.html`;\n\t\t\tbody = minify_html(body);\n\t\t}\n\n\t\temitter.emit('file', <events.FileEvent>{\n\t\t\tfile,\n\t\t\tsize: body.length\n\t\t});\n\n\t\tsander.writeFileSync(export_dir, file, body);\n\t});\n\n\tasync function handle(url: URL) {\n\t\tconst r = await fetch(url.href);\n\t\tconst range = ~~(r.status / 100);\n\n\t\tif (range >= 4) {\n\t\t\temitter.emit('failure', <events.FailureEvent>{\n\t\t\t\tstatus: r.status,\n\t\t\t\tpathname: url.pathname\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tif (range === 2) {\n\t\t\tif (r.headers.get('Content-Type') === 'text/html') {\n\t\t\t\tconst body = await r.text();\n\t\t\t\tconst $ = cheerio.load(body);\n\t\t\t\tconst urls: URL[] = [];\n\n\t\t\t\tconst base = new URL($('base').attr('href') || '/', url.href);\n\n\t\t\t\t$('a[href]').each((i: number, $a) => {\n\t\t\t\t\tconst url = new URL($a.attribs.href, base.href);\n\n\t\t\t\t\tif (url.origin === origin && !seen.has(url.pathname)) {\n\t\t\t\t\t\tseen.add(url.pathname);\n\t\t\t\t\t\turls.push(url);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tfor (const url of urls) {\n\t\t\t\t\tawait handle(url);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn ports.wait(port)\n\t\t.then(() => handle(new URL(`/${basepath}`, origin))) // TODO all static routes\n\t\t.then(() => proc.kill());\n}\n"],"names":["EventEmitter","path.join","sander.rimrafSync","sander.copydirSync","sander.existsSync","sander.copyFileSync","ports.find","child_process.fork","path.resolve","minify_html","sander.writeFileSync","ports.wait"],"mappings":"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"}