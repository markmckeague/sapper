{"version":3,"file":"core.ts.js","sources":["../src/core/utils.ts","../src/core/create_manifests.ts","../src/core/create_compilers.ts","../src/core/create_routes.ts"],"sourcesContent":["import * as sander from 'sander';\n\nconst previous_contents = new Map();\n\nexport function write_if_changed(file: string, code: string) {\n\tif (code !== previous_contents.get(file)) {\n\t\tprevious_contents.set(file, code);\n\t\tsander.writeFileSync(file, code);\n\t\tfudge_mtime(file);\n\t}\n}\n\nexport function posixify(file: string) {\n\treturn file.replace(/[/\\\\]/g, '/');\n}\n\nexport function fudge_mtime(file: string) {\n\t// need to fudge the mtime so that webpack doesn't go doolally\n\tconst { atime, mtime } = sander.statSync(file);\n\tsander.utimesSync(\n\t\tfile,\n\t\tnew Date(atime.getTime() - 999999),\n\t\tnew Date(mtime.getTime() - 999999)\n\t);\n}","import * as fs from 'fs';\nimport * as path from 'path';\nimport * as glob from 'glob';\nimport { posixify, write_if_changed } from './utils';\nimport { dev, locations } from '../config';\nimport { Route } from '../interfaces';\n\nexport function create_main_manifests({ routes, dev_port }: {\n\troutes: Route[];\n\tdev_port?: number;\n}) {\n\tconst path_to_routes = path.relative(`${locations.app()}/manifest`, locations.routes());\n\n\tconst client_manifest = generate_client(routes, path_to_routes, dev_port);\n\tconst server_manifest = generate_server(routes, path_to_routes);\n\n\twrite_if_changed(`${locations.app()}/manifest/client.js`, client_manifest);\n\twrite_if_changed(`${locations.app()}/manifest/server.js`, server_manifest);\n}\n\nexport function create_serviceworker_manifest({ routes, client_files }: {\n\troutes: Route[];\n\tclient_files: string[];\n}) {\n\tconst assets = glob.sync('**', { cwd: 'assets', nodir: true });\n\n\tlet code = `\n\t\t// This file is generated by Sapper — do not edit it!\n\t\texport const timestamp = ${Date.now()};\n\n\t\texport const assets = [\\n\\t${assets.map((x: string) => `\"${x}\"`).join(',\\n\\t')}\\n];\n\n\t\texport const shell = [\\n\\t${client_files.map((x: string) => `\"${x}\"`).join(',\\n\\t')}\\n];\n\n\t\texport const routes = [\\n\\t${routes.pages.filter(r => r.id !== '_error').map((r: Route) => `{ pattern: ${r.pattern} }`).join(',\\n\\t')}\\n];\n\t`.replace(/^\\t\\t/gm, '').trim();\n\n\twrite_if_changed(`${locations.app()}/manifest/service-worker.js`, code);\n}\n\nfunction generate_client(routes: Route[], path_to_routes: string, dev_port?: number) {\n\tconst page_ids = new Set(routes.pages.map(page => page.id));\n\tconst server_routes_to_ignore = routes.server_routes.filter(route => !page_ids.has(route.id));\n\n\tconst pages = routes.pages.filter(page => page.id !== '_error');\n\tconst error_route = routes.pages.find(page => page.id === '_error');\n\n\tlet code = `\n\t\t// This file is generated by Sapper — do not edit it!\n\t\texport const routes = {\n\t\t\tignore: [${server_routes_to_ignore.map(route => route.pattern).join(', ')}],\n\n\t\t\tpages: [\n\t\t\t\t${pages.map(page => {\n\t\t\t\t\tconst file = posixify(`${path_to_routes}/${page.file}`);\n\n\t\t\t\t\tif (page.id === '_error') {\n\t\t\t\t\t\treturn `{ error: true, load: () => import(/* webpackChunkName: \"${page.id}\" */ '${file}') }`;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst params = page.params.length === 0\n\t\t\t\t\t\t? '{}'\n\t\t\t\t\t\t: `{ ${page.params.map((part, i) => `${part}: match[${i + 1}]`).join(', ')} }`;\n\n\t\t\t\t\treturn `{ pattern: ${page.pattern}, params: ${page.params.length > 0 ? `match` : `()`} => (${params}), load: () => import(/* webpackChunkName: \"${page.id}\" */ '${file}') }`;\n\t\t\t\t}).join(',\\n\\t\\t\\t\\t')}\n\t\t\t],\n\n\t\t\terror: () => import(/* webpackChunkName: '_error' */ '${posixify(`${path_to_routes}/${error_route.file}`)}')\n\t\t};`.replace(/^\\t\\t/gm, '').trim();\n\n\tif (dev()) {\n\t\tconst sapper_dev_client = posixify(\n\t\t\tpath.resolve(__dirname, '../sapper-dev-client.js')\n\t\t);\n\n\t\tcode += `\n\n\t\t\tif (module.hot) {\n\t\t\t\timport('${sapper_dev_client}').then(client => {\n\t\t\t\t\tclient.connect(${dev_port});\n\t\t\t\t});\n\t\t\t}`.replace(/^\\t{3}/gm, '');\n\t}\n\n\treturn code;\n}\n\nfunction generate_server(routes: Route[], path_to_routes: string) {\n\tconst error_route = routes.pages.find(page => page.id === '_error');\n\n\tconst imports = [].concat(\n\t\troutes.server_routes.map(route =>\n\t\t\t`import * as route_${route.id} from '${posixify(`${path_to_routes}/${route.file}`)}';`),\n\t\troutes.pages.map(page =>\n\t\t\t`import page_${page.id} from '${posixify(`${path_to_routes}/${page.file}`)}';`),\n\t\t`import error from '${posixify(`${path_to_routes}/${error_route.file}`)}';`\n\t);\n\n\tlet code = `\n\t\t// This file is generated by Sapper — do not edit it!\n\t\t${imports.join('\\n')}\n\n\t\texport const routes = {\n\t\t\tserver_routes: [\n\t\t\t\t${routes.server_routes.map(route => {\n\t\t\t\t\tconst params = route.params.length === 0\n\t\t\t\t\t\t? '{}'\n\t\t\t\t\t\t: `{ ${route.params.map((part, i) => `${part}: match[${i + 1}]`).join(', ')} }`;\n\n\t\t\t\t\treturn `{ id: '${route.id}', pattern: ${route.pattern}, params: ${route.params.length > 0 ? `match` : `()`} => (${params}), handlers: route_${route.id} }`;\n\t\t\t\t}).join(',\\n\\t\\t\\t\\t')}\n\t\t\t],\n\n\t\t\tpages: [\n\t\t\t\t${routes.pages.map(page => {\n\t\t\t\t\tconst params = page.params.length === 0\n\t\t\t\t\t\t? '{}'\n\t\t\t\t\t\t: `{ ${page.params.map((part, i) => `${part}: match[${i + 1}]`).join(', ')} }`;\n\n\t\t\t\t\treturn `{ id: '${page.id}', pattern: ${page.pattern}, params: ${page.params.length > 0 ? `match` : `()`} => (${params}), handler: page_${page.id} }`;\n\t\t\t\t}).join(',\\n\\t\\t\\t\\t')}\n\t\t\t],\n\n\t\t\terror: {\n\t\t\t\terror: true,\n\t\t\t\thandler: error\n\t\t\t}\n\t\t};`.replace(/^\\t\\t/gm, '').trim();\n\n\treturn code;\n}","import * as path from 'path';\nimport relative from 'require-relative';\n\nexport default function create_compilers({ webpack }: { webpack: string }) {\n\tconst wp = relative('webpack', process.cwd());\n\n\tconst serviceworker_config = try_require(path.resolve(`${webpack}/service-worker.config.js`));\n\n\treturn {\n\t\tclient: wp(\n\t\t\trequire(path.resolve(`${webpack}/client.config.js`))\n\t\t),\n\n\t\tserver: wp(\n\t\t\trequire(path.resolve(`${webpack}/server.config.js`))\n\t\t),\n\n\t\tserviceworker: serviceworker_config && wp(serviceworker_config)\n\t};\n}\n\nfunction try_require(specifier: string) {\n\ttry {\n\t\treturn require(specifier);\n\t} catch (err) {\n\t\tif (err.code === 'MODULE_NOT_FOUND') return null;\n\t\tthrow err;\n\t}\n}","import * as path from 'path';\nimport glob from 'glob';\nimport { locations } from '../config';\nimport { Route } from '../interfaces';\n\nexport default function create_routes({\n\tfiles\n} = {\n\tfiles: glob.sync('**/*.*', {\n\t\tcwd: locations.routes(),\n\t\tdot: true,\n\t\tnodir: true\n\t})\n}) {\n\tconst all_routes = files\n\t\t.filter((file: string) => !/(^|\\/|\\\\)(_(?!error\\.html)|\\.(?!well-known))/.test(file))\n\t\t.map((file: string) => {\n\t\t\tif (/]\\[/.test(file)) {\n\t\t\t\tthrow new Error(`Invalid route ${file} — parameters must be separated`);\n\t\t\t}\n\n\t\t\tif (file === '4xx.html' || file === '5xx.html') {\n\t\t\t\tthrow new Error('As of Sapper 0.14, 4xx.html and 5xx.html should be replaced with _error.html');\n\t\t\t}\n\n\t\t\tconst base = file.replace(/\\.[^/.]+$/, '');\n\t\t\tconst parts = base.split('/'); // glob output is always posix-style\n\t\t\tif (/^index(\\..+)?/.test(parts[parts.length - 1])) {\n\t\t\t\tconst part = parts.pop();\n\t\t\t\tif (parts.length > 0) parts[parts.length - 1] += part.slice(5);\n\t\t\t}\n\n\t\t\tconst id = (\n\t\t\t\tparts.join('_').replace(/[[\\]]/g, '$').replace(/^\\d/, '_$&').replace(/[^a-zA-Z0-9_$]/g, '_')\n\t\t\t) || '_';\n\n\t\t\tconst type = file.endsWith('.html') ? 'page' : 'route';\n\n\t\t\tconst params: string[] = [];\n\t\t\tconst match_patterns: Record<string, string> = {};\n\t\t\tconst param_pattern = /\\[([^\\(\\]]+)(?:\\((.+?)\\))?\\]/g;\n\n\t\t\tlet match;\n\t\t\twhile (match = param_pattern.exec(base)) {\n\t\t\t\tparams.push(match[1]);\n\t\t\t\tif (typeof match[2] !== 'undefined') {\n\t\t\t\t\tif (/[\\(\\)\\?\\:]/.exec(match[2])) {\n\t\t\t\t\t\tthrow new Error('Sapper does not allow (, ), ? or : in RegExp routes yet');\n\t\t\t\t\t}\n\t\t\t\t\t// Make a map of the regexp patterns\n\t\t\t\t\tmatch_patterns[match[1]] = `(${match[2]}?)`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// TODO can we do all this with sub-parts? or does\n\t\t\t// nesting make that impossible?\n\t\t\tlet pattern_string = '';\n\t\t\tlet i = parts.length;\n\t\t\tlet nested = true;\n\t\t\twhile (i--) {\n\t\t\t\tconst part = encodeURI(parts[i].normalize()).replace(/\\?/g, '%3F').replace(/#/g, '%23').replace(/%5B/g, '[').replace(/%5D/g, ']');\n\t\t\t\tconst dynamic = ~part.indexOf('[');\n\n\t\t\t\tif (dynamic) {\n\t\t\t\t\t// Get keys from part and replace with stored match patterns\n\t\t\t\t\tconst keys = part.replace(/\\(.*?\\)/, '').split(/[\\[\\]]/).filter((x, i) => { if (i % 2) return x });\n\t\t\t\t\tlet matcher = part;\n\t\t\t\t\tkeys.forEach(k => {\n\t\t\t\t\t\tconst key_pattern = new RegExp('\\\\[' + k + '(?:\\\\((.+?)\\\\))?\\\\]');\n\t\t\t\t\t\tmatcher = matcher.replace(key_pattern, match_patterns[k] || `([^/]+?)`);\n\t\t\t\t\t})\n\t\t\t\t\tpattern_string = (nested && type === 'page') ? `(?:\\\\/${matcher}${pattern_string})?` : `\\\\/${matcher}${pattern_string}`;\n\t\t\t\t} else {\n\t\t\t\t\tnested = false;\n\t\t\t\t\tpattern_string = `\\\\/${part}${pattern_string}`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst pattern = new RegExp(`^${pattern_string}\\\\/?$`);\n\n\t\t\tconst test = (url: string) => pattern.test(url);\n\n\t\t\tconst exec = (url: string) => {\n\t\t\t\tconst match = pattern.exec(url);\n\t\t\t\tif (!match) return;\n\n\t\t\t\tconst result: Record<string, string> = {};\n\t\t\t\tparams.forEach((param, i) => {\n\t\t\t\t\tresult[param] = match[i + 1];\n\t\t\t\t});\n\n\t\t\t\treturn result;\n\t\t\t};\n\n\t\t\treturn {\n\t\t\t\tid,\n\t\t\t\tbase,\n\t\t\t\ttype,\n\t\t\t\tfile,\n\t\t\t\tpattern,\n\t\t\t\ttest,\n\t\t\t\texec,\n\t\t\t\tparts,\n\t\t\t\tparams\n\t\t\t};\n\t\t});\n\n\tconst pages = all_routes\n\t\t.filter(r => r.type === 'page')\n\t\t.sort(comparator);\n\n\tconst server_routes = all_routes\n\t\t.filter(r => r.type === 'route')\n\t\t.sort(comparator);\n\n\treturn { pages, server_routes };\n}\n\nfunction comparator(a, b) {\n\tif (a.parts[0] === '_error') return -1;\n\tif (b.parts[0] === '_error') return 1;\n\n\tconst max = Math.max(a.parts.length, b.parts.length);\n\n\tfor (let i = 0; i < max; i += 1) {\n\t\tconst a_part = a.parts[i];\n\t\tconst b_part = b.parts[i];\n\n\t\tif (!a_part) return -1;\n\t\tif (!b_part) return 1;\n\n\t\tconst a_sub_parts = get_sub_parts(a_part);\n\t\tconst b_sub_parts = get_sub_parts(b_part);\n\t\tconst max = Math.max(a_sub_parts.length, b_sub_parts.length);\n\n\t\tfor (let i = 0; i < max; i += 1) {\n\t\t\tconst a_sub_part = a_sub_parts[i];\n\t\t\tconst b_sub_part = b_sub_parts[i];\n\n\t\t\tif (!a_sub_part) return 1; // b is more specific, so goes first\n\t\t\tif (!b_sub_part) return -1;\n\n\t\t\tif (a_sub_part.dynamic !== b_sub_part.dynamic) {\n\t\t\t\treturn a_sub_part.dynamic ? 1 : -1;\n\t\t\t}\n\n\t\t\tif (!a_sub_part.dynamic && a_sub_part.content !== b_sub_part.content) {\n\t\t\t\treturn (\n\t\t\t\t\t(b_sub_part.content.length - a_sub_part.content.length) ||\n\t\t\t\t\t(a_sub_part.content < b_sub_part.content ? -1 : 1)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// If both parts dynamic, check for regexp patterns\n\t\t\tif (a_sub_part.dynamic && b_sub_part.dynamic) {\n\t\t\t\tconst regexp_pattern = /\\((.*?)\\)/;\n\t\t\t\tconst a_match = regexp_pattern.exec(a_sub_part.content);\n\t\t\t\tconst b_match = regexp_pattern.exec(b_sub_part.content);\n\n\t\t\t\tif (!a_match && b_match) {\n\t\t\t\t\treturn 1; // No regexp, so less specific than b\n\t\t\t\t}\n\t\t\t\tif (!b_match && a_match) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\tif (a_match && b_match && a_match[1] !== b_match[1]) {\n\t\t\t\t\treturn b_match[1].length - a_match[1].length;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow new Error(`The ${a.base} and ${b.base} routes clash`);\n}\n\nfunction get_sub_parts(part: string) {\n\treturn part.split(/\\[(.+)\\]/)\n\t\t.map((content, i) => {\n\t\t\tif (!content) return null;\n\t\t\treturn {\n\t\t\t\tcontent,\n\t\t\t\tdynamic: i % 2 === 1\n\t\t\t};\n\t\t})\n\t\t.filter(Boolean);\n}"],"names":["sander.writeFileSync","sander.utimesSync","path.relative","locations","glob.sync","dev","path.resolve"],"mappings":"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"}